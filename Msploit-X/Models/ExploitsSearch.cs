using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using CsvHelper;
using CsvHelper.Configuration.Attributes;
using ReactiveUI;

namespace Msploit_X.Models
{
    public class ExploitsSearch : ReactiveObject
    {
        public ExploitsSearch()
        {
            using (var reader = new StreamReader("exploitdb/files_exploits.csv"))
            using (var csv = new CsvReader(reader, CultureInfo.InvariantCulture))
            {
                var exploits = csv.GetRecords<ExploitSearchItem>();

                foreach (var item in exploits)
                {
                    ItemsB.Add(item);
                }

                items = itemsB;
            }
        }
        
        private string search;

        public string Search
        {
            get => search;
            set
            {
                this.RaiseAndSetIfChanged(ref search, value);
                var itemsNew = new ObservableCollection<ExploitSearchItem>();
                foreach (var item in ItemsB)
                {
                    if (item.description.ToLower().Contains(value.ToLower()) || item.platform.ToLower().Contains(value.ToLower()))
                    {
                        itemsNew.Add(item);
                    }
                }

                Items = itemsNew;
            }
        }
        
        private ObservableCollection<ExploitSearchItem> items = new ObservableCollection<ExploitSearchItem>();

        public ObservableCollection<ExploitSearchItem> Items
        {
            get => items;
            set => this.RaiseAndSetIfChanged(ref items, value);
        }

        private ObservableCollection<ExploitSearchItem> itemsB = new ObservableCollection<ExploitSearchItem>();

        public ObservableCollection<ExploitSearchItem> ItemsB
        {
            get => itemsB;
            set => this.RaiseAndSetIfChanged(ref itemsB, value);
        }
    }
    
    public class ExploitSearchItem
    {

        public void openLink()
        {
            Process.Start(new ProcessStartInfo("https://www.exploit-db.com/exploits/"+Id) {UseShellExecute = true});
        }
        
        public string description;
        public string id;
        public string platform;

        [Name("description")]
        public string Description
        {
            get => description;
            set => description = value;
        }

        [Name("id")]
        public string Id
        {
            get => id;
            set => id = value;
        }

        [Name("platform")]
        public string Platform
        {
            get => platform;
            set => platform = value;
        }
    }
}